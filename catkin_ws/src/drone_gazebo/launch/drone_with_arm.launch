<launch>
    <arg name="world" default="$(find drone_gazebo)/worlds/sydneyregatta.world" />
    <!-- If true, run gazebo GUI -->
    <arg name="gui" default="true" />

    <!-- If true, run gazebo in verbose mode -->
    <arg name="verbose" default="false"/>

    <!-- Set various other gazebo arguments-->
    <arg name="extra_gazebo_args" default=""/>

    <!-- drone namespace -->
    <arg name="drone_ns" default="/"/>

    <!-- wamv namespace -->
    <arg name="wamv_ns" default="wamv"/>


    <arg name="wamv_locked" default="false" />

    <arg name="pinger_params" default="$(find drone_gazebo)/config/pinger.yaml"/>


    <!-- Launch Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)" />
        <arg name="paused" value="false" />
    </include>

    <!-- drone initail position -->
    <arg name="drone_x" default="-530" />
    <arg name="drone_y" default="144" />
    <!-- <arg name="drone_z" default="2.2" /> -->
    <arg name="drone_z" default="3" />
    <arg name="drone_R" default="0" />
    <arg name="drone_P" default="0" />
    <arg name="drone_Y" default="1" />


    <!-- land tag initail position -->
    <arg name="tag_x" default="-527" />
    <arg name="tag_y" default="147" />
    <arg name="tag_z" default="4" />
    <arg name="tag_R" default="0" />
    <arg name="tag_P" default="0" />
    <arg name="tag_Y" default="0" />


    <!-- wamv initail position -->
    <arg name="wamv_x" default="-532" />
    <arg name="wamv_y" default="162" />
    <arg name="wamv_z" default="0.1" />
    <arg name="wamv_R" default="0" />
    <arg name="wamv_P" default="0" />
    <arg name="wamv_Y" default="0" />

    <!-- drone -->

    <arg name="model" default="iris_depth_camera"/>
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
    <arg name="gcs_url" default="" />   
    <arg name="tgt_system" default="1" />
    <arg name="tgt_component" default="1" />
    <arg name="UAV" default="iris"/>
    <param name="use_sim_time" value="true" />


    <node pkg="tf" type="static_transform_publisher" name="tf_latching_link"
          args="0.9 0 -0.15 0 0 0 fcu latching_link 10"/>

    <!-- forward -->
    <node pkg="tf" type="static_transform_publisher" name="tf_front_camera_link"
          args="-0.1 0 0.1 0 0.366 0 fcu front_camera_link 10"/>

    <node pkg="tf" type="static_transform_publisher" name="tf_front_camera_optical_link"
          args="0 0 0 -1.57 0 -1.57 front_camera_link front_camera_optical_link 10"/>


    <node pkg="tf" type="static_transform_publisher" name="tf_left_camera_link"
          args="-0.1 0.1 0.1 0.87 0.366 0  fcu left_camera_link 10"/>

    <node pkg="tf" type="static_transform_publisher" name="tf_left_camera_optical_link"
          args="0 0 0 -1.57 0 -1.57 left_camera_link left_camera_optical_link 10"/>
 

    <node pkg="tf" type="static_transform_publisher" name="tf_right_camera_link"
          args="-0.1 -0.1 0.1 -0.87 0.366 0  fcu right_camera_link 10"/>

    <node pkg="tf" type="static_transform_publisher" name="tf_right_camera_optical_link"
          args="0 0 0 -1.57 0 -1.57 right_camera_link right_camera_optical_link 10"/>
 
    <node pkg="tf" type="static_transform_publisher" name="tf_wamv_link"
          args="-3 17 2 0 0 0 local_origin wamv_link 10"/>
    <!-- downward 45 degree -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="tf_camera_link"
          args="0.1 0 0 0 0.785 0 fcu camera_link 10"/>

    <node pkg="tf" type="static_transform_publisher" name="tf_camera_optical_link"
          args="0.1 0 0 -1.57 0 -2.355 fcu camera_optical_link 10"/> -->

    <include file="$(find px4)/launch/px4.launch">
        <arg name="vehicle" value="$(arg UAV)"/>
    </include>

    <group ns="$(arg drone_ns)">
        <include file="$(find mavros)/launch/node.launch">
            <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
            <arg name="config_yaml" value="$(find drone_gazebo)/config/drone_config/px4_config.yaml" />
            <arg name="fcu_url" value="$(arg fcu_url)" />
            <arg name="gcs_url" value="$(arg gcs_url)" />
            <arg name="tgt_system" value="$(arg tgt_system)" />
            <arg name="tgt_component" value="$(arg tgt_component)" />

        </include>
    </group>


	<!-- widowx250 control -->
	<include file="$(find interbotix_xsarm_gazebo)/launch/wx250_gazebo_control.launch">
		<arg name="robot_model" value="wx250"/>
            <arg name="use_position_controllers" value="true"/>
		<!-- <arg name="use_trajectory_controllers" value="true"/> -->
            <arg name="use_world_frame" value="false"/>

	</include>


    <!-- <node name="spawn_model_drone" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg drone_x) -y $(arg drone_y) -z $(arg drone_z)
              -R $(arg drone_R) -P $(arg drone_P) -Y $(arg drone_Y)
              -sdf -database $(arg model) -model drone"/> -->

    <!-- <node name="spawn_model_drone" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg drone_x) -y $(arg drone_y) -z $(arg drone_z)
              -R $(arg drone_R) -P $(arg drone_P) -Y $(arg drone_Y)
              -sdf -database iris_aerial_pushing -model drone"/> -->    
      <node name="spawn_model_drone" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg drone_x) -y $(arg drone_y) -z $(arg drone_z)
              -R $(arg drone_R) -P $(arg drone_P) -Y $(arg drone_Y)
              -sdf -database iris_aerial_arm -model drone"/>
      
      <!-- <node name="spawn_model_drone" pkg="gazebo_ros" type="spawn_model"
      args="-x $(arg drone_x) -y $(arg drone_y) -z $(arg drone_z)
            -R $(arg drone_R) -P $(arg drone_P) -Y $(arg drone_Y)
            -sdf -database iris_aerial_arm_broken -model drone"/> -->

    <!-- Allow user specified thruster configurations
        H = stern trusters on each hull
        T = H with a lateral thruster
        X = "holonomic" configuration -->
    <arg name="thrust_config" default="T" />

    <!-- Do we load the VRX sensor suite? -->
    <arg name="vrx_sensors_enabled" default="true" />


      <node name="spawn_sdf_ball" pkg="gazebo_ros" type="spawn_model"
        args="-x -527 -y 144 -z 5
              -R 0 -P 0 -Y 0
              -sdf -database red_ball -model ball"/>
	
    
</launch>